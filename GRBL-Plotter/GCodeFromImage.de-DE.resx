<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nUDReso.ToolTip" xml:space="preserve">
    <value>Abstand zwischen zwei Zeilen in Einheiten (mm oder Inch)</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nUDHeight.Location" type="System.Drawing.Point, System.Drawing">
    <value>37, 45</value>
  </data>
  <data name="nUDWidth.Location" type="System.Drawing.Point, System.Drawing">
    <value>37, 19</value>
  </data>
  <data name="label4.Location" type="System.Drawing.Point, System.Drawing">
    <value>2, 20</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>34, 13</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Breite</value>
  </data>
  <data name="label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>54, 13</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Auflösung</value>
  </data>
  <data name="label6.ToolTip" xml:space="preserve">
    <value>Abstand zwischen zwei Zeilen in Einheiten (mm oder Inch)</value>
  </data>
  <data name="label5.Location" type="System.Drawing.Point, System.Drawing">
    <value>2, 47</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>33, 13</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Höhe</value>
  </data>
  <data name="cbLockRatio.Location" type="System.Drawing.Point, System.Drawing">
    <value>95, 20</value>
  </data>
  <data name="cbLockRatio.Size" type="System.Drawing.Size, System.Drawing">
    <value>101, 17</value>
  </data>
  <data name="cbLockRatio.Text" xml:space="preserve">
    <value>Seitenverhältnis</value>
  </data>
  <data name="cbLockRatio.ToolTip" xml:space="preserve">
    <value>Seitenverhältnis beibehalten</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="groupBox3.ToolTip" xml:space="preserve">
    <value>Größe in GCode EInheiten also mm oder Inch</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Kontrast</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>50, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Helligkeit</value>
  </data>
  <data name="cbGrayscale.Size" type="System.Drawing.Size, System.Drawing">
    <value>147, 17</value>
  </data>
  <data name="cbGrayscale.Text" xml:space="preserve">
    <value>In Graustufen umwandeln</value>
  </data>
  <data name="cbGrayscale.ToolTip" xml:space="preserve">
    <value>Bild in Graustufen umwandeln</value>
  </data>
  <data name="rbModeDither.ToolTip" xml:space="preserve">
    <value>Ausgabe in Schwarzweiß</value>
  </data>
  <data name="rbModeGray.Size" type="System.Drawing.Size, System.Drawing">
    <value>77, 17</value>
  </data>
  <data name="rbModeGray.Text" xml:space="preserve">
    <value>Graustufen</value>
  </data>
  <data name="rbModeGray.ToolTip" xml:space="preserve">
    <value>Ausgabe in Graustufen</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Umwandlungs Mode</value>
  </data>
  <data name="btnInvert.ToolTip" xml:space="preserve">
    <value>Bild invertieren</value>
  </data>
  <data name="btnHorizMirror.ToolTip" xml:space="preserve">
    <value>Bild auf der Y-Achse spiegeln</value>
  </data>
  <data name="btnVertMirror.ToolTip" xml:space="preserve">
    <value>Bild auf der X-Achse spiegeln</value>
  </data>
  <data name="btnRotateRight.ToolTip" xml:space="preserve">
    <value>Bild um 90° im Uhrzeigersinn drehen</value>
  </data>
  <data name="btnRotateLeft.ToolTip" xml:space="preserve">
    <value>Bild um 90° gegen den Uhrzeigersinn drehen</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Plot Richtung</value>
  </data>
  <data name="btnGenerate.Text" xml:space="preserve">
    <value>Erzeuge GCode</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Farbkorrektur</value>
  </data>
  <data name="cbExceptColor.Size" type="System.Drawing.Size, System.Drawing">
    <value>53, 17</value>
  </data>
  <data name="cbExceptColor.Text" xml:space="preserve">
    <value>Farbe</value>
  </data>
  <data name="cbExceptColor.ToolTip" xml:space="preserve">
    <value>Linksklick im Bild um Farbe auszuwählen</value>
  </data>
  <data name="nUDMode.Location" type="System.Drawing.Point, System.Drawing">
    <value>60, 18</value>
  </data>
  <data name="nUDMode.ToolTip" xml:space="preserve">
    <value>Methode um am besten passende Farbe zu finden
0: Abstand im RGB-Raum: Math.Sqrt((c1.R - c2.R) * (c1.R - c2.R) + (c1.G - c2.G) * (c1.G - c2.G) + (c1.B - c2.B)*(c1.B - c2.B)); }
1: Abstand im Farbraum (0°-360°)
2: Abstand im Farbraum (0°-360°) + Sättigung + Helligkeit</value>
  </data>
  <data name="cbSkipToolOrder.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 17</value>
  </data>
  <data name="cbSkipToolOrder.Text" xml:space="preserve">
    <value>Fortlaufende Stiftnummern</value>
  </data>
  <data name="cbSkipToolOrder.ToolTip" xml:space="preserve">
    <value>Anstatt die Stiftnummer (=Werkzeugnummer) aus der Palette zu ermitteln, werden die Stifte der Reihe nach von Null beginnend gezählt (0,1,2...)</value>
  </data>
  <data name="btnLoad.Size" type="System.Drawing.Size, System.Drawing">
    <value>76, 24</value>
  </data>
  <data name="btnLoad.Text" xml:space="preserve">
    <value>Bild laden</value>
  </data>
  <data name="groupBox5.Size" type="System.Drawing.Size, System.Drawing">
    <value>93, 65</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>Ausnahmen</value>
  </data>
  <data name="btnTest.Location" type="System.Drawing.Point, System.Drawing">
    <value>79, 358</value>
  </data>
  <data name="btnTest.Size" type="System.Drawing.Size, System.Drawing">
    <value>94, 24</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>Ergebnis zeigen</value>
  </data>
  <data name="btnTest.ToolTip" xml:space="preserve">
    <value>Knopf gedrückt halten um Palettenfarben zu zeigen</value>
  </data>
  <data name="btnList.Location" type="System.Drawing.Point, System.Drawing">
    <value>174, 358</value>
  </data>
  <data name="btnList.Size" type="System.Drawing.Size, System.Drawing">
    <value>95, 24</value>
  </data>
  <data name="btnList.Text" xml:space="preserve">
    <value>Liste der Farben</value>
  </data>
  <data name="btnList.ToolTip" xml:space="preserve">
    <value>Liste der Stiftnummern mit zugehöriger Farbe</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>49, 13</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Methode</value>
  </data>
  <data name="groupBox6.Location" type="System.Drawing.Point, System.Drawing">
    <value>192, 287</value>
  </data>
  <data name="groupBox6.Size" type="System.Drawing.Size, System.Drawing">
    <value>178, 65</value>
  </data>
  <data name="groupBox6.Text" xml:space="preserve">
    <value>Farbersetzung</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Erzeuge GCode aus Bild</value>
  </data>
</root>